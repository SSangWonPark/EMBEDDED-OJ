#define _CRT_SECURE_NO_WARNINGS

#if 0
#include <stdio.h>

// 함수 호출 형태를 보고 알아서 작성.

void inputarr(int arr[][3]) {
	
	for (int i = 0; i < 3; i++)
	{
		for (int j = 0; j < 3; j++)
		{
			scanf("%d", &arr[i][j]);
		}
	}
}

void makeDiagonal(int arr[][3]) {
	for (int i = 0; i < 3; i++)
	{
		for (int j = 0; j < 3; j++)
		{
			if (i != j)
			{
				arr[i][j] = 0;
			}
		}
	}
}

void printarr(int arr[][3]) {
	for (int i = 0; i < 3; i++)
	{
		for (int j = 0; j < 3; j++)
		{
			printf("%d ", arr[i][j]);
		}
		printf("\n");
	}
}

int main() {

	int arr[3][3];
	inputarr(arr);
	makeDiagonal(arr);
	printarr(arr);

	return 0;
}
#endif

#if 0
#include <stdio.h>
#include <stdlib.h>

int main() {
	
	int x, y;

	scanf("%d %d", &x, &y);

	int** p = (int**)malloc(sizeof(int*) * x);

	for (int i = 0; i < x; i++)
	{
		p[i] = (int*)malloc(sizeof(int) * y);
	}

	for (int i = 0; i < x; i++)
	{
		for (int j = 0; j < y; j++)
		{
			scanf("%d", &p[i][j]);
		}
	}

	int *sum = (int*)malloc(sizeof(int) * x);

	for (int i = 0; i < x; i++)
	{
		sum[i] = 0;
	}

	for (int i = 0; i < x; i++)
	{
		for (int j = 0; j < y; j++)
		{
			sum[i] = sum[i] + p[i][j];
		}
	}

	for (int i = 0; i < x; i++)
	{
		printf("%d ", sum[i]);
	}

	free(p);

	for (int i = 0; i < x; i++)
	{
		free(p[i]);
	}

	free(sum);

	return 0;
}
#endif

#if 0
#include <stdio.h>

void esestrcpy(char arr[], char result[]) {
	char temp[100];
	int i = 0;
	int k = 0;
	int j = 0;

	for (int a = 0; a < 100; a++)
	{
		result[a] = 0;
	}

	while (arr[i] != '\0')
	{
		if (arr[i] >= 'A' && arr[i] <= 'Z')
		{
			temp[k] = arr[i];
			k++;
		}
		else
		{
			result[j] = arr[i];
			j++;
		}
		i++;
	}

	for (int a = 0; a < k; a++)
	{
		result[j + a] = temp[a];
	}

};

int main(void)
{
	char arr[100];
	char result[100];

	scanf("%s", arr);

	esestrcpy(arr, result);

	printf("%s", result);
	return 0;
}
#endif


#if 0 // 그 주소에 있는 걸 어떻게 해야할까..
#include <stdio.h>
// 텍스트영역을 어떻게 읽을까......
// 고정되어있는 값이니 이렇게 해도 될까..????
// 야매 풀이
int count(const char* Names[2][3], char key[]) {

	//5 0 0 1 4 0 0 4 6 1 0 2 1 7 0 0 0 1 0 0 0 0 0 0 1 0
	//MinjiHaNnihAeRindaNieLLEHyEinHana

	int i = 0;
	int cnt = 0;
	int alpha[26] = { 0 };
	int temp[26] = { 5 ,0 ,0 ,1 ,4 ,0 ,0 ,4 ,6 ,1, 0, 2, 1, 7, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0 };

	while (key[i] != '\0')
	{
		if (key[i] >= 'a' && key[i] <= 'z')
		{
			key[i] = key[i] - 'a' + 'A';
		}
		i++;
	}
	i = 0;

	while (key[i] != '\0')
	{
		alpha[key[i] - 'A']++;
		i++;
	}
	i = 0;

	for (int i = 0; i < 26; i++)
	{
		if (alpha[i] != 0)
		{
			cnt = cnt + temp[i];
		}
	}
	//5 0 0 1 4 0 0 4 6 1 
	// 0 2 1 7 0 0 0 1 0 0 0 0 0 0 1 0
	return cnt;
};

int main()
{
	char* Names[2][3] = {
		{"Minji", "HaNni", "hAeRin"},
		{"daNieLLE", "HyEin", "Hana"}
	};
	char key[11];
	int cnt = 0;

	scanf("%s", key);
	cnt = count(Names, key);
	printf("%d", cnt);

	return 0;
}
#endif

#if 0
#include <stdio.h>

int countKey(char* str, char* key) {

	int i = 0;
	int k = 1;
	int cnt = 0;

	while (str[i] != '\0')
	{
		if (str[i] >= 'a' && str[i] <= 'z')
		{
			str[i] = str[i] - 'a' + 'A';
		}
		i++;
	}

	i = 0;

	while (key[i] != '\0')
	{
		if (key[i] >= 'a' && key[i] <= 'z')
		{
			key[i] = key[i] - 'a' + 'A';
		}
		i++;
	}

	i = 0;

	while (str[i] != '\0')
	{
		if (str[i] == key[0])
		{
			k = 0;

			while (key[k] != '\0')
			{
				if (key[k] != str[i + k])
				{
					break;
				}
				k++;
			}
			if (key[k] == '\0')
			{
				cnt++;
			}
		}

		i++;
	}

	return cnt;
};

int main(void)
{
	char str[100];
	char key[10];

	scanf("%s", str);
	scanf("%s", key);

	printf("%d", countKey(str, key));
}
#endif

#if 0
#include <stdio.h>

void sort(int* a, int* b, int* c, int* d, int* e, int* f, int* g, int* h, int* i, int* j) {
	int arr[10] = { *a, *b, *c, *e, *d, *f, *g, *h, *i, *j};
	int temp = 0;

	for (int i = 0; i < 10; i++)
	{
		for (int j = 0; j < 9; j++)
		{
			if (arr[j] > arr[j + 1])
			{
				temp = arr[j];
				arr[j] = arr[j + 1];
				arr[j + 1] = temp;
			}
		}
	}

	*a = arr[0];
	*b = arr[1];
	*c = arr[2];
	*d = arr[3];
	*e = arr[4];
	*f = arr[5];
	*g = arr[6];
	*h = arr[7];
	*i = arr[8];
	*j = arr[9];
}

int main(void) {

	int a, b, c, d, e, f, g, h, i, j;
	scanf("%d %d %d %d %d %d %d %d %d %d", &a, &b, &c, &d, &e, &f, &g, &h, &i, &j);

	sort(&a, &b, &c, &d, &e, &f, &g, &h, &i, &j);

	printf("%d %d %d %d %d %d %d %d %d %d", a, b, c, d, e, f, g, h, i, j);

	return 0;
}
#endif

#if 0
#include <stdio.h>

struct date {
	int year, month, day;
};

struct student {
	char name[10];
	int number;
	struct date birthday;
}human[10], temp;

int main() {
	int n = 0;

	scanf("%d", &n);

	for (int i = 0; i < n; i++)
	{
		scanf("%s %d %d %d %d", &human[i].name, &human[i].number, &human[i].birthday.year, &human[i].birthday.month, &human[i].birthday.day);
	}

	for (int k = 0; k <= n; k++)
	{
		for (int i = 0; i < n - 1; i++)
		{
			if (human[i].birthday.year > human[i + 1].birthday.year)
			{
				temp = human[i];
				human[i] = human[i + 1];
				human[i + 1] = temp;
			}
			else if (human[i].birthday.year == human[i + 1].birthday.year)
			{
				if (human[i].birthday.month > human[i + 1].birthday.month)
				{
					temp = human[i];
					human[i] = human[i + 1];
					human[i + 1] = temp;
				}
				else if (human[i].birthday.month == human[i + 1].birthday.month)
				{
					if (human[i].birthday.day > human[i + 1].birthday.day)
					{
						temp = human[i];
						human[i] = human[i + 1];
						human[i + 1] = temp;
					}
				}
			}
		}
	}
	
	for (int i = 0; i < n; i++)
	{
		printf("%s %d %d %d %d\n", human[i].name, human[i].number, human[i].birthday.year, human[i].birthday.month, human[i].birthday.day);
	}

	return 0;
}

#endif

#if 0
#include <stdio.h>

struct date {
	int year, month, day;
}birth;

void ese_date(struct date birth) {
	
	char str[100] = { 0, };
	int y[100] = {0,}, m[100] = {0,}, d[100] = {0,};
	int i = 0, j = 0, k = 0;
	
	scanf("%d %d %d", &birth.year, &birth.month, &birth.day);

	while (birth.year > 0)
	{
		y[i] = birth.year % 10;
		birth.year = birth.year / 10;
		i++;
	}
	while (birth.month > 0)
	{
		m[j] = birth.month % 10;
		birth.month = birth.month / 10;
		j++;
	}
	while (birth.day > 0)
	{
		d[k] = birth.day % 10;
		birth.day = birth.day / 10;
		k++;
	}

	for (int a = 0, b = i - 1; a < i; a++, b--)
	{
		str[a] = y[b] + '0';
	}

	str[i] = '-';

	for (int a = i + 1, b = j - 1; a < i + j + 1; a++, b--)
	{
		str[a] = m[b] + '0';
	}

	str[i + j + 1] = '-';


	for (int a = i + j + 2, b = k - 1; a < i + j + k + 2; a++, b--)
	{
		str[a] = d[b] + '0';
	}

	printf("%s", str);
}

int main() {
	ese_date(birth);
}

#endif

#if 1
#include <stdio.h>
// 풀지못한 문제 사이트가 터져서 모르는 문제
// 아마도 숫자를 받으면 한글로 만드는 게 문제
// 123 --> 일백이십삼
void str2korean(char data[], char result[]) {

};

int main(void) {

	char data[100];
	char result[100];

	scanf("%s", data);

	str2korean(data, result);
	printf("%s", result);

}
#endif
