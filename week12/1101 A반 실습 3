#include <stdio.h>
#include <stdlib.h>

int** makeArrayDynamic(int** _p, int _size);
int sumofArray(int** _p, int _size);

int main() {

    int** p = NULL;
    int size, sum = 0;

    scanf("%d", &size); // 정사각 배열 사이즈를 입력받음.

    // [size x size] 크기의 배열 동적할당
    p = makeArrayDynamic(p, size);  // <- 1. 이 함수 구현


    // 배열에 원소 값을 순차적으로 입력
    for (int i = 0; i < size; i++) {
        for (int j = 0; j < size; j++) {
            scanf("%d", &p[i][j]);
        }
    }

    // 배열 내에 있는 모든 원소의 합
    sum = sumofArray(p, size);   // <- 2. 이 함수 구현

    printf("%d", sum); // 합 출력

    // 동적할당 free
    for (int i = 0; i < size; i++) free(p[i]);
    free(p);

    return 0;
}

int** makeArrayDynamic(int** _p, int _size) {
    _p = (int**)malloc(sizeof(int*) * _size);

    for (int i = 0; i < _size; i++)
    {
        _p[i] = (int*)malloc(sizeof(int) * _size);
    }

    return _p;
}

int sumofArray(int** _p, int _size) {
    int ans = 0;

    for (int i = 0; i < _size; i++)
    {
        for (int j = 0; j < _size; j++)
        {
            ans = ans + _p[i][j];
        }
    }

    return ans;
}
